Metadata-Version: 1.0
Name: saliencyfilters
Version: 0.0.1
Summary: A Python implementation of Saliency Filters method
Home-page: https://github.com/arifqodari/saliencyfilters
Author: Arif Qodari
Author-email: arif.qodari@gmail.com
License: MIT License

Copyright (c) [year] [fullname]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Description: saliencyfilters: A Python implementation of the Saliency Filters method
        =======================================================================
        
        saliencyfilters is a Python implementation of the Saliency Filters
        method, which is an algorithm to estimate salient region on images.
        
        References
        ----------
        
        Perazzi, Federico, et al. "Saliency filters: Contrast based filtering
        for salient region detection." Computer Vision and Pattern Recognition
        (CVPR), 2012 IEEE Conference on. IEEE, 2012.
        
        Required Packages
        -----------------
        
        -  numpy
        -  scipy
        -  scikit-image
        
        Installation
        ------------
        
        ::
        
            pip install -r requirements.txt
            python setup.py install
        
        Usage
        -----
        
        Sample code is provided in ``demo.py``.
        
        ::
        
            python demo.py sample.jpg output.jpg
        
        Notes
        -----
        
        Our implementation does not use Permutohedral Lattice embedding as
        stated in the paper. Hence, the code requires :math:`O(N^2)` operations.
        The results are pretty much similar but a little bit slower in terms of
        running time.
        
Platform: UNKNOWN
